[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = -1;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +11] * 512 -1;

backup;
multipush(EIP);
alias userSP R0;
userSP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +13];

alias currentPID R2;
currentPID = [SYSTEM_STATUS_TABLE+1];

alias functionNum R1;

if(EC!=0 || (userSP == PTLR*512-1)) then
	print "terminating!!!";
	multipush(R0,R1,R2);
	R1 = 3;
	R2 = currentPID;
	call MOD_1;
	multipop(R0,R1,R2);
	multipush(R0,R1,R2);
	call MOD_5;
	multipop(R0,R1,R2);
endif;
if(EC==0) then
	alias returnVal R0;
	if(EPN==2 || EPN==3) then
		multipush(R1,R2);
		R1 = 1;
		call MOD_2;
		multipop(R1,R2);
		[PTBR+4] = returnVal;
		[PTBR+5] = "1110";
		
		
		multipush(R1,R2);
		R1 = 1;
		call MOD_2;
		multipop(R1,R2);
		[PTBR+6] = returnVal;
		[PTBR+7] = "1110";
		
	else
		multipush(R1,R2);
		R1 = 5;	
		R2 = [DISK_MAP_TABLE + currentPID*10 +EPN];
		call MOD_2;
		multipop(R1,R2);
		[PTBR+2*EPN] = returnVal;
		[PTBR+2*EPN+1] = "1100";
		
	endif;

	
endif;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = 0;
multipop(EIP);
restore;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +13];	
	
SP = SP+1;
[[PTBR+2*(SP/512)]*512+(SP%512)] =EIP;

ireturn;

	
	
	
