alias currentPID R1;
currentPID = [SYSTEM_STATUS_TABLE + 1];
breakpoint;
multipush(BP);

alias process_table_entry R2;
process_table_entry = PROCESS_TABLE + currentPID * 16;
[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

alias newPID R3;
newPID = currentPID + 1;
if(newPID == 16) then
	newPID = 1;
endif;
alias counter R4;
counter = 1;
while(counter != 16) do
	if([PROCESS_TABLE + newPID * 16 + 4] == READY || [PROCESS_TABLE + newPID * 16 + 4] == CREATED) then
		break;
	else
		newPID = newPID + 1;
		if(newPID == 16) then
			newPID = 1;		
		endif;
		counter = counter + 1;
	endif; 
endwhile;

if(counter == 16) then
	newPID = 0;
endif;


alias new_process_table R5;
new_process_table = PROCESS_TABLE + newPID * 16;
SP = [new_process_table + 11]*512 + [new_process_table +12];
PTBR = [new_process_table + 14];
PTLR = [new_process_table + 15];

[SYSTEM_STATUS_TABLE + 1] = newPID;

if([new_process_table + 4] == CREATED) then
	BP = [[new_process_table + 11]*512];	
	SP = [new_process_table + 13];
	[new_process_table + 4] = RUNNING;
	[new_process_table + 9] = 0;
	ireturn;
endif;

[new_process_table + 4] = RUNNING;

multipop(BP);
return;

