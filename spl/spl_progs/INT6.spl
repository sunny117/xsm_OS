[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = 7;
alias userSP R1;
userSP = SP;

alias currentPID R2;
currentPID = [SYSTEM_STATUS_TABLE+1];

alias process_table R3;
process_table = PROCESS_TABLE + currentPID*16;

[process_table + 13] = SP;
SP = [process_table + 11] * 512 - 1;

alias retVal R4;
retVal = [PTBR + 2*((userSP-1)/512)]*512 + (userSP-1)%512;

alias fileDesc R5;
fileDesc = [[PTBR + 2*((userSP-4)/512)]*512 + (userSP-4)%512];

alias wordAddr R6;
wordAddr = [[PTBR + 2*((userSP-3)/512)]*512 + (userSP-3)%512];

if(fileDesc == -1) then
	multipush(R1,R2,R3,R4,R5,R6);
	R1 = 4;
	R2 = currentPID;
	R3 = wordAddr;
	call MOD_4;
	multipop(R1,R2,R3,R4,R5,R6);
else
	alias userpage R7;
	userpage = [process_table + 11];

	if(fileDesc<0 || fileDesc>7 || [userpage*512 + 496 + 2*fileDesc]!=FILE) then
		[retVal] = -1;
		[process_table + 9] = 0;
		SP = [process_table + 13];
		ireturn;	
	endif;

	alias fileIndex R8;
	fileIndex = [userpage*512 + 496 + 2*fileDesc + 1];
	
	alias inodeIndex R9;
	inodeIndex = [OPEN_FILE_TABLE + 4*fileIndex];

	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9);
	R1 = 4;
	R2 = inodeIndex;
	R3 = currentPID;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);

	if(R0 == -1) then
		[retVal] = -1;
		[process_table + 9] = 0;
		SP = [process_table + 13];
		ireturn;
	endif;

	alias lseek R10;
	lseek = [OPEN_FILE_TABLE + 4*fileIndex + 2];

	alias phywordAddr R11;
	phywordAddr = [PTBR + (2*wordAddr)/512]*512 + (wordAddr)%512;

	if(inodeIndex == INODE_ROOT) then
		if(lseek == 480) then
			multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
			R1 = 5;
			R2 = inodeIndex;
			R3 = currentPID;
			call MOD_0;
			multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
			
			[retVal] = -2;
			[process_table + 9] = 0;
			SP = [process_table + 13];
			ireturn;
		endif;

		[phywordAddr] = [ROOT_FILE + lseek];
		[OPEN_FILE_TABLE + 4*fileIndex + 2] = [OPEN_FILE_TABLE + 4*fileIndex + 2] + 1;
	else
		if(lseek == [INODE_TABLE + 16*inodeIndex + 2]) then
			multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
			R1 = 5;
			R2 = inodeIndex;
			R3 = currentPID;
			call MOD_0;
			multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
			
			[retVal] = -2;
			[process_table + 9] = 0;
			SP = [process_table + 13];
			ireturn;
		endif;
		
		alias diskBlock R12;
		diskBlock = [INODE_TABLE + 16*inodeIndex + 8 + (lseek/512)];

		multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		R1 = 2;
		R2 = diskBlock;
		R3 = lseek%512;
		R4 = phywordAddr;
		call MOD_3;
		multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		
		[OPEN_FILE_TABLE + 4*fileIndex + 2] = [OPEN_FILE_TABLE + 4*fileIndex + 2] + 1;
	endif;

	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	R1 = 5;
	R2 = inodeIndex;
	R3 = currentPID;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
endif;

[retVal] = 0;
[process_table + 9] = 0;
SP = [process_table + 13];
ireturn;
