[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = 9;

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +11] * 512 -1;

alias fileName R1;
fileName = [([PTBR + 2 * ((userSP - 4)/512)]*512) + (userSP-4)%512];

alias counter R4;
counter = 0;

while(counter < MAX_FILE_NUM) do
	if([INODE_TABLE + 16*counter + 1] == fileName  && [INODE_TABLE + 16*counter] == EXEC) then
		break;
	endif;
	counter = counter + 1;
endwhile;


if( counter == MAX_FILE_NUM) then
	alias physicalAddrRetVal R2;
	physicalAddrRetVal = ([PTBR + 2*((userSP - 1)/512)] * 512) + ((userSP-1)%512);
	[physicalAddrRetVal] = -1;
	SP = userSP;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = 0;
	ireturn;
else
	alias index R3;
	index = counter;

	multipush(R0,R1,R2,R3);
	R1 = 3;
	R2 = [SYSTEM_STATUS_TABLE+1];
	call MOD_1;
	multipop(R0,R1,R2,R3);
	
	alias userareapage R2;
	userareapage = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11];
	[MEMORY_FREE_LIST + userareapage] = [MEMORY_FREE_LIST + userareapage] + 1;
	[SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]-1;
	
	
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 11] * 512 - 1;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=RUNNING;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+7]=index;
	[PTBR+0] = 63;
	[PTBR+1] = "0100";
	[PTBR+2] = 64;
	[PTBR+3] = "0100";
	

	alias returnValue R0;

	multipush(R1,R2,R3);
	R1 = 1;
	R2 = [SYSTEM_STATUS_TABLE+1];
	call MOD_2;
	multipop(R1,R2,R3);

	[PTBR+16] = returnValue;
	[PTBR+17] = "0110";
	
	multipush(R1,R2,R3);
	R1 = 1;
	R2 = [SYSTEM_STATUS_TABLE+1];
	call MOD_2;
	multipop(R1,R2,R3);

	[PTBR+18] = returnValue;
	[PTBR+19] = "0110";

	[PTBR+4] = -1;
	[PTBR+5] = "0000";
	
	[PTBR+6] = -1;
	[PTBR+7] = "0000";

	multipush(R1,R2,R3);
	R1 = 5;
	R2 = [INODE_TABLE+index*16+8];
	call MOD_2;
	multipop(R1,R2,R3);

	[PTBR+8] = returnValue;
	[PTBR+9] = "1100";

	[PTBR+10] = -1;
	[PTBR+11] = "0000";

	[PTBR+12] = -1;
	[PTBR+13] = "0000";

	[PTBR+14] = -1;
	[PTBR+15] = "0000";
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +2] = -1;
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +3] = -1;
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +4] = [INODE_TABLE+index*16+8];
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +5] = [INODE_TABLE+index*16+9];
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +6] = [INODE_TABLE+index*16+10];
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +7] = [INODE_TABLE+index*16+11];
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +8] = -1;
	[DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE + 1]*10 +9] = -1;
	

endif;


[[PTBR+16]*512] = [[PTBR+8]*512 + 1];
SP = 8*512;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE +1] * 16) +9] = 0;
ireturn;
